{"ast":null,"code":"// get request for JSON book data // this goes inside of API.js inside of SRC/utils\nexport default {\n  getBook: function (book) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + book);\n  } //handleFormSubmit on search page\n\n};\n\nhandleFormSubmit = event => {\n  event.preventDefault();\n  API.getBook(this.state.search).then(res => {\n    if (res.data.status === \"error\") {\n      throw new Error(res.data);\n    }\n\n    this.setState({\n      results: res.data.items.volumeInfo,\n      error: \"\"\n    });\n  }).catch(err => this.setState({\n    error: err\n  }));\n}; //information we need from API\n\n\nitems.volumeInfo.title;\nitems.volumeInfo.authors;\nitems.volumeInfo.description;\nitems.volumeInfo.previewLink;\nitems.volumeInfo.imageLinks.thumbnail; //handleInputChange on search page\n\nhandleInputChange = event => {\n  this.setState({\n    search: event.target.value\n  });\n}; // controllers \n// booksController.js \n\n\nmodule.exports = {\n  create: function (req, res) {\n    db.Book.create(req.body).then(dbModel => res.json(dbModel)).catch(err => res.status(422).json(err));\n  },\n  findAll: function (req, res) {\n    db.Book.find(req.query).sort({\n      date: -1\n    }).then(dbModel => res.json(dbModel)).catch(err => res.status(422).json(err));\n  },\n  remove: function (req, res) {\n    db.Book.findById({\n      _id: req.params.id\n    }).then(dbModel => dbModel.remove()).then(dbModel => res.json(dbModel)).catch(err => res.status(422).json(err));\n  }\n};","map":{"version":3,"sources":["/Users/matthewryanhagarty/Desktop/google-books-assignment/google-books/src/Components/pages/Saved.js"],"names":["getBook","book","axios","get","handleFormSubmit","event","preventDefault","API","state","search","then","res","data","status","Error","setState","results","items","volumeInfo","error","catch","err","title","authors","description","previewLink","imageLinks","thumbnail","handleInputChange","target","value","module","exports","create","req","db","Book","body","dbModel","json","findAll","find","query","sort","date","remove","findById","_id","params","id"],"mappings":"AAAA;AAEA,eAAe;AAEXA,EAAAA,OAAO,EAAE,UAASC,IAAT,EAAe;AACpB,WAAOC,KAAK,CAACC,GAAN,CAAU,mDAAmDF,IAA7D,CAAP;AACD,GAJQ,CAQf;;AARe,CAAf;;AAUAG,gBAAgB,GAAGC,KAAK,IAAI;AACxBA,EAAAA,KAAK,CAACC,cAAN;AACAC,EAAAA,GAAG,CAACP,OAAJ,CAAY,KAAKQ,KAAL,CAAWC,MAAvB,EACGC,IADH,CACQC,GAAG,IAAI;AACX,QAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,OAAxB,EAAiC;AAC/B,YAAM,IAAIC,KAAJ,CAAUH,GAAG,CAACC,IAAd,CAAN;AACD;;AACD,SAAKG,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEL,GAAG,CAACC,IAAJ,CAASK,KAAT,CAAeC,UAA1B;AAAsCC,MAAAA,KAAK,EAAE;AAA7C,KAAd;AACD,GANH,EAOGC,KAPH,CAOSC,GAAG,IAAI,KAAKN,QAAL,CAAc;AAAEI,IAAAA,KAAK,EAAEE;AAAT,GAAd,CAPhB;AAQD,CAVH,C,CAYE;;;AAEAJ,KAAK,CAACC,UAAN,CAAiBI,KAAjB;AACAL,KAAK,CAACC,UAAN,CAAiBK,OAAjB;AACAN,KAAK,CAACC,UAAN,CAAiBM,WAAjB;AACAP,KAAK,CAACC,UAAN,CAAiBO,WAAjB;AACAR,KAAK,CAACC,UAAN,CAAiBQ,UAAjB,CAA4BC,SAA5B,C,CAGA;;AAEAC,iBAAiB,GAAGvB,KAAK,IAAI;AACzB,OAAKU,QAAL,CAAc;AAACN,IAAAA,MAAM,EAAEJ,KAAK,CAACwB,MAAN,CAAaC;AAAtB,GAAd;AACH,CAFD,C,CAOA;AACM;;;AAERC,MAAM,CAACC,OAAP,GAAiB;AAEbC,EAAAA,MAAM,EAAE,UAASC,GAAT,EAAcvB,GAAd,EAAmB;AACvBwB,IAAAA,EAAE,CAACC,IAAH,CACGH,MADH,CACUC,GAAG,CAACG,IADd,EAEG3B,IAFH,CAEQ4B,OAAO,IAAI3B,GAAG,CAAC4B,IAAJ,CAASD,OAAT,CAFnB,EAGGlB,KAHH,CAGSC,GAAG,IAAIV,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgB0B,IAAhB,CAAqBlB,GAArB,CAHhB;AAID,GAPU;AASbmB,EAAAA,OAAO,EAAE,UAASN,GAAT,EAAcvB,GAAd,EAAmB;AACxBwB,IAAAA,EAAE,CAACC,IAAH,CACGK,IADH,CACQP,GAAG,CAACQ,KADZ,EAEGC,IAFH,CAEQ;AAAEC,MAAAA,IAAI,EAAE,CAAC;AAAT,KAFR,EAGGlC,IAHH,CAGQ4B,OAAO,IAAI3B,GAAG,CAAC4B,IAAJ,CAASD,OAAT,CAHnB,EAIGlB,KAJH,CAISC,GAAG,IAAIV,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgB0B,IAAhB,CAAqBlB,GAArB,CAJhB;AAKD,GAfU;AAiBbwB,EAAAA,MAAM,EAAE,UAASX,GAAT,EAAcvB,GAAd,EAAmB;AACvBwB,IAAAA,EAAE,CAACC,IAAH,CACGU,QADH,CACY;AAAEC,MAAAA,GAAG,EAAEb,GAAG,CAACc,MAAJ,CAAWC;AAAlB,KADZ,EAEGvC,IAFH,CAEQ4B,OAAO,IAAIA,OAAO,CAACO,MAAR,EAFnB,EAGGnC,IAHH,CAGQ4B,OAAO,IAAI3B,GAAG,CAAC4B,IAAJ,CAASD,OAAT,CAHnB,EAIGlB,KAJH,CAISC,GAAG,IAAIV,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgB0B,IAAhB,CAAqBlB,GAArB,CAJhB;AAKD;AAvBU,CAAjB","sourcesContent":["// get request for JSON book data // this goes inside of API.js inside of SRC/utils\n\nexport default {\n\n    getBook: function(book) {\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + book);\n      }\n\n}\n\n//handleFormSubmit on search page\n\nhandleFormSubmit = event => {\n    event.preventDefault();\n    API.getBook(this.state.search)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data);\n        }\n        this.setState({ results: res.data.items.volumeInfo, error: \"\" });\n      })\n      .catch(err => this.setState({ error: err }));\n  };\n\n  //information we need from API\n\n  items.volumeInfo.title\n  items.volumeInfo.authors\n  items.volumeInfo.description\n  items.volumeInfo.previewLink\n  items.volumeInfo.imageLinks.thumbnail\n\n\n  //handleInputChange on search page\n\n  handleInputChange = event => {\n      this.setState({search: event.target.value})\n  }\n\n\n\n\n  // controllers \n        // booksController.js \n\nmodule.exports = {\n\n    create: function(req, res) {\n        db.Book\n          .create(req.body)\n          .then(dbModel => res.json(dbModel))\n          .catch(err => res.status(422).json(err));\n      },\n\n    findAll: function(req, res) {\n        db.Book\n          .find(req.query)\n          .sort({ date: -1 })\n          .then(dbModel => res.json(dbModel))\n          .catch(err => res.status(422).json(err));\n      },\n\n    remove: function(req, res) {\n        db.Book\n          .findById({ _id: req.params.id })\n          .then(dbModel => dbModel.remove())\n          .then(dbModel => res.json(dbModel))\n          .catch(err => res.status(422).json(err));\n      }\n\n}\n"]},"metadata":{},"sourceType":"module"}