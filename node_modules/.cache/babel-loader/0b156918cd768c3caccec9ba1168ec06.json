{"ast":null,"code":"var _jsxFileName = \"/Users/matthewryanhagarty/Desktop/google-books-remote/src/Components/pages/Home.js\";\nimport React from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport API from \"../../utils/API\"; // import SearchForm from \"../../Components/SearchForm\"\n\nimport Navbar from \"../Navbar\";\nimport ResultCard from \"../ResultCard\";\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      results: [],\n      title: \"\",\n      author: \"\" //handleFormSubmit on search page\n\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      console.log(\"below\", this.state.title);\n      API.getBook(this.state.title).then(res => {\n        // if (res.data.status === \"error\") {\n        //   throw new Error(res.data);\n        // }\n        console.log(res.data);\n        this.setState({\n          results: res.data.items,\n          error: \"\"\n        });\n      }).catch(err => this.setState({\n        error: err\n      }));\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.saveBook = id => {\n      console.log(newBookArray);\n      const newBookArray = this.state.results.filter(book => book.id === id);\n      const newBooksArray = this.state.results.filter(book => book.id !== id);\n      const Book = {\n        title: newBookArray[0].volumeInfo.title,\n        image: newBookArray[0].volumeInfo.imageLinks.thumbnail,\n        authors: newBookArray[0].volumeInfo.authors,\n        description: newBookArray[0].volumeInfo.description,\n        id: newBookArray[0].id,\n        link: newBookArray[0].volumeInfo.infoLink\n      };\n      API.saveBook(Book).then(response => {\n        console.log(response);\n        this.setState({\n          results: newBooksArray\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Book Search\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.title,\n      name: \"title\",\n      onChange: this.handleInputChange,\n      type: \"text\",\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      style: {\n        marginLeft: 10\n      },\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Submit\")), this.state.results.map((book, i) => React.createElement(ResultCard, {\n      key: book.id,\n      title: book.volumeInfo.title,\n      author: book.volumeInfo.authors,\n      image: book.volumeInfo.imageLinks.thumbnail,\n      link: book.volumeInfo.infoLink,\n      saveBook: this.saveBook,\n      index: i,\n      id: book.volumeInfo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/matthewryanhagarty/Desktop/google-books-remote/src/Components/pages/Home.js"],"names":["React","Jumbotron","API","Navbar","ResultCard","Home","Component","state","books","results","title","author","handleFormSubmit","event","preventDefault","console","log","getBook","then","res","data","setState","items","error","catch","err","handleInputChange","target","name","value","saveBook","id","newBookArray","filter","book","newBooksArray","Book","volumeInfo","image","imageLinks","thumbnail","authors","description","link","infoLink","response","render","marginLeft","map","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Jumbotron from '../Jumbotron';\nimport API from \"../../utils/API\";\n// import SearchForm from \"../../Components/SearchForm\"\nimport Navbar from \"../Navbar\"\nimport ResultCard from \"../ResultCard\";\n\n\nclass Home extends React.Component {\n\n\n  state = {\n    books: [],\n    results: [],\n    title: \"\",\n    author: \"\"\n  }\n\n\n\n\n\n  //handleFormSubmit on search page\n\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(\"below\", this.state.title)\n    API.getBook(this.state.title)\n\n      .then(res => {\n        // if (res.data.status === \"error\") {\n        //   throw new Error(res.data);\n        // }\n        console.log(res.data)\n        this.setState({ results: res.data.items, error: \"\" });\n      })\n      .catch(err => this.setState({ error: err }));\n  };\n\n\n    //handleInputChange on search page\n\n  handleInputChange = event => {\n     const {name, value } = event.target;\n    this.setState({\n      [name]: value\n    })};\n\n  saveBook = (id) => {\n    console.log(newBookArray)\n\n    const newBookArray = this.state.results.filter((book) => book.id ===id)\n    const newBooksArray = this.state.results.filter((book) => book.id !==id)\n    const Book = {\n      title:newBookArray[0].volumeInfo.title,\n      image:newBookArray[0].volumeInfo.imageLinks.thumbnail,\n      authors:newBookArray[0].volumeInfo.authors,\n      description:newBookArray[0].volumeInfo.description,\n      id:newBookArray[0].id,\n      link:newBookArray[0].volumeInfo.infoLink\n    }\n    API.saveBook(Book)\n    .then(response => {\n      console.log(response);\n      this.setState({\n        results:newBooksArray\n      })\n    })\n  }\n   \n  \n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Jumbotron />\n          <h3>Book Search</h3>\n          <p>{this.state.title}</p>\n          <form className=\"form\">\n            <input\n              value={this.state.title}\n              name=\"title\"\n              onChange={this.handleInputChange}\n              type=\"text\"\n              placeholder=\"First Name\"\n            />\n            <button style={{ marginLeft: 10 }} onClick={this.handleFormSubmit}>Submit</button>\n          </form>\n          {this.state.results.map((book, i) => (\n            <ResultCard\n            key={book.id}\n            title={book.volumeInfo.title}\n            author={book.volumeInfo.authors}\n            image={book.volumeInfo.imageLinks.thumbnail}\n            link={book.volumeInfo.infoLink}\n            saveBook={this.saveBook}\n            index={i}\n            id={book.volumeInfo.id}\n            />\n          ))}\n\n      </div>\n    )\n  }\n\n\n}\n\n\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}